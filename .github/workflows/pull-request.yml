name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for package changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            website:
              - 'apps/website/**'
            ui:
              - 'packages/ui/**'
            config:
              - 'packages/**'
              - 'turbo.json'
              - 'pnpm-lock.yaml'

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: changes

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Run all quality checks
        run: |
          pnpm lint
          pnpm check-types
          pnpm test:coverage
          pnpm build

      - name: Comment PR with results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const comment = `## ðŸ¤– CI Results

            âœ… All quality checks passed!

            - Linting: Complete
            - Type checking: Complete
            - Tests: Complete
            - Build: Complete

            ### Turborepo Cache
            Remote caching is enabled. Subsequent runs will be faster! ðŸš€
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
